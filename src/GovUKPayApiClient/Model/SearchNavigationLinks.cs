/*
 * GOV.UK Pay API
 *
 * GOV.UK Pay API
 *
 * The version of the OpenAPI document: 1.0.3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = GovUKPayApiClient.Client.OpenAPIDateConverter;

namespace GovUKPayApiClient.Model
{
    /// <summary>
    /// Links to navigate through pages
    /// </summary>
    [DataContract(Name = "SearchNavigationLinks")]
    public partial class SearchNavigationLinks : IEquatable<SearchNavigationLinks>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SearchNavigationLinks" /> class.
        /// </summary>
        /// <param name="firstPage">firstPage.</param>
        /// <param name="lastPage">lastPage.</param>
        /// <param name="nextPage">nextPage.</param>
        /// <param name="prevPage">prevPage.</param>
        /// <param name="self">self.</param>
        public SearchNavigationLinks(Link firstPage = default(Link), Link lastPage = default(Link), Link nextPage = default(Link), Link prevPage = default(Link), Link self = default(Link))
        {
            this.FirstPage = firstPage;
            this.LastPage = lastPage;
            this.NextPage = nextPage;
            this.PrevPage = prevPage;
            this.Self = self;
        }

        /// <summary>
        /// Gets or Sets FirstPage
        /// </summary>
        [DataMember(Name = "first_page", EmitDefaultValue = false)]
        public Link FirstPage { get; set; }

        /// <summary>
        /// Gets or Sets LastPage
        /// </summary>
        [DataMember(Name = "last_page", EmitDefaultValue = false)]
        public Link LastPage { get; set; }

        /// <summary>
        /// Gets or Sets NextPage
        /// </summary>
        [DataMember(Name = "next_page", EmitDefaultValue = false)]
        public Link NextPage { get; set; }

        /// <summary>
        /// Gets or Sets PrevPage
        /// </summary>
        [DataMember(Name = "prev_page", EmitDefaultValue = false)]
        public Link PrevPage { get; set; }

        /// <summary>
        /// Gets or Sets Self
        /// </summary>
        [DataMember(Name = "self", EmitDefaultValue = false)]
        public Link Self { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SearchNavigationLinks {\n");
            sb.Append("  FirstPage: ").Append(FirstPage).Append("\n");
            sb.Append("  LastPage: ").Append(LastPage).Append("\n");
            sb.Append("  NextPage: ").Append(NextPage).Append("\n");
            sb.Append("  PrevPage: ").Append(PrevPage).Append("\n");
            sb.Append("  Self: ").Append(Self).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SearchNavigationLinks);
        }

        /// <summary>
        /// Returns true if SearchNavigationLinks instances are equal
        /// </summary>
        /// <param name="input">Instance of SearchNavigationLinks to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SearchNavigationLinks input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.FirstPage == input.FirstPage ||
                    (this.FirstPage != null &&
                    this.FirstPage.Equals(input.FirstPage))
                ) && 
                (
                    this.LastPage == input.LastPage ||
                    (this.LastPage != null &&
                    this.LastPage.Equals(input.LastPage))
                ) && 
                (
                    this.NextPage == input.NextPage ||
                    (this.NextPage != null &&
                    this.NextPage.Equals(input.NextPage))
                ) && 
                (
                    this.PrevPage == input.PrevPage ||
                    (this.PrevPage != null &&
                    this.PrevPage.Equals(input.PrevPage))
                ) && 
                (
                    this.Self == input.Self ||
                    (this.Self != null &&
                    this.Self.Equals(input.Self))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.FirstPage != null)
                {
                    hashCode = (hashCode * 59) + this.FirstPage.GetHashCode();
                }
                if (this.LastPage != null)
                {
                    hashCode = (hashCode * 59) + this.LastPage.GetHashCode();
                }
                if (this.NextPage != null)
                {
                    hashCode = (hashCode * 59) + this.NextPage.GetHashCode();
                }
                if (this.PrevPage != null)
                {
                    hashCode = (hashCode * 59) + this.PrevPage.GetHashCode();
                }
                if (this.Self != null)
                {
                    hashCode = (hashCode * 59) + this.Self.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
