/*
 * GOV.UK Pay API
 *
 * GOV.UK Pay API
 *
 * The version of the OpenAPI document: 1.0.3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using GovUKPayApiClient.Client;
using GovUKPayApiClient.Api;
// uncomment below to import models
//using GovUKPayApiClient.Model;

namespace GovUKPayApiClient.Test.Api
{
    /// <summary>
    ///  Class for testing CardPaymentsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CardPaymentsApiTests : IDisposable
    {
        private CardPaymentsApi instance;

        public CardPaymentsApiTests()
        {
            instance = new CardPaymentsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CardPaymentsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' CardPaymentsApi
            //Assert.IsType<CardPaymentsApi>(instance);
        }

        /// <summary>
        /// Test CancelAPayment
        /// </summary>
        [Fact]
        public void CancelAPaymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string paymentId = null;
            //instance.CancelAPayment(paymentId);
        }

        /// <summary>
        /// Test CaptureAPayment
        /// </summary>
        [Fact]
        public void CaptureAPaymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string paymentId = null;
            //instance.CaptureAPayment(paymentId);
        }

        /// <summary>
        /// Test CreateAPayment
        /// </summary>
        [Fact]
        public void CreateAPaymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateCardPaymentRequest createCardPaymentRequest = null;
            //var response = instance.CreateAPayment(createCardPaymentRequest);
            //Assert.IsType<CreatePaymentResult>(response);
        }

        /// <summary>
        /// Test GetAPayment
        /// </summary>
        [Fact]
        public void GetAPaymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string paymentId = null;
            //var response = instance.GetAPayment(paymentId);
            //Assert.IsType<GetPaymentResult>(response);
        }

        /// <summary>
        /// Test GetEventsForAPayment
        /// </summary>
        [Fact]
        public void GetEventsForAPaymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string paymentId = null;
            //var response = instance.GetEventsForAPayment(paymentId);
            //Assert.IsType<PaymentEvents>(response);
        }

        /// <summary>
        /// Test SearchPayments
        /// </summary>
        [Fact]
        public void SearchPaymentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string reference = null;
            //string email = null;
            //string state = null;
            //string cardBrand = null;
            //string fromDate = null;
            //string toDate = null;
            //string page = null;
            //string displaySize = null;
            //string cardholderName = null;
            //string firstDigitsCardNumber = null;
            //string lastDigitsCardNumber = null;
            //string fromSettledDate = null;
            //string toSettledDate = null;
            //var response = instance.SearchPayments(reference, email, state, cardBrand, fromDate, toDate, page, displaySize, cardholderName, firstDigitsCardNumber, lastDigitsCardNumber, fromSettledDate, toSettledDate);
            //Assert.IsType<PaymentSearchResults>(response);
        }
    }
}
