/*
 * GOV.UK Pay API
 *
 * GOV.UK Pay API
 *
 * The version of the OpenAPI document: 1.0.3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using GovUKPayApiClient.Client;
using GovUKPayApiClient.Api;
using GovUKPayApiClient.Model;
using System.Diagnostics;
using System.Threading;
// uncomment below to import models
//using GovUKPayApiClient.Model;

namespace GovUKPayApiClient.Test.Api
{
    /// <summary>
    ///  Class for testing CardPaymentsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CardPaymentsApiTests : IDisposable
    {
        private CardPaymentsApi instance;

        public CardPaymentsApiTests()
        {
            // BMBC - api_test_94avgeuigduvdjrrdjkm06fc0la1eu40oe0re9t67kpef372f96cda19m2
            
            instance = new CardPaymentsApi() { Configuration = new Configuration { AccessToken = "api_test_94avgeuigduvdjrrdjkm06fc0la1eu40oe0re9t67kpef372f96cda19m2" } };
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CardPaymentsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' CardPaymentsApi
            //Assert.IsType<CardPaymentsApi>(instance);
        }

        /// <summary>
        /// Test CancelAPayment
        /// </summary>
        [Fact]
        public void CancelAPaymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string paymentId = null;
            //instance.CancelAPayment(paymentId);
        }

        /// <summary>
        /// Test CaptureAPayment
        /// </summary>
        [Fact]
        public void CaptureAPaymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string paymentId = null;
            //instance.CaptureAPayment(paymentId);
        }

        /// <summary>
        /// Test CreateAPayment
        /// </summary>
        [Fact]
        public void CreateAPaymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            CreateCardPaymentRequest createCardPaymentRequest = new CreateCardPaymentRequest(
                description: "Test", 
                reference: DateTime.Now.Ticks.ToString(), 
                returnUrl: "http://www.google.com",
                amount: 100);
            
            var response = instance.CreateAPayment(createCardPaymentRequest);
            Assert.IsType<CreatePaymentResult>(response);
        }

        /// <summary>
        /// Test GetAPayment
        /// </summary>
        [Theory]
        //[InlineData("vsr9m9jvdt82adh2ksvk4cnheh")]
        //[InlineData("giq3bqqokg31p41f9b0telcq1c")]
        //[InlineData("sl9cfa63mkc48g1r1kh2f79cpl")]
        //[InlineData("ibsum5p767bro5di78natn97pp")]
        //[InlineData("orclsdlch61qq2dfo51ebhq667")]
        //[InlineData("99kdtpak46gpp0vfhboi2q7g64")]
        //[InlineData("47uvrokk5nnp6tn656t0984gl8")]
        //[InlineData("ctla33n2lqfdpch9cooahg5mk0")]

        [InlineData("90unrmpvk83trk50g2tgpqn6ph")]
        public void GetAPaymentTest(string paymentId)
        {
            //string paymentId = "vsr9m9jvdt82adh2ksvk4cnheh";
            var response = instance.GetAPayment(paymentId);
            Debug.WriteLine(response.Fee);
            Assert.IsType<GetPaymentResult>(response);
                
            Thread.Sleep(2000);
        }

        /// <summary>
        /// Test GetEventsForAPayment
        /// </summary>
        [Fact]
        public void GetEventsForAPaymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string paymentId = null;
            //var response = instance.GetEventsForAPayment(paymentId);
            //Assert.IsType<PaymentEvents>(response);
        }

        /// <summary>
        /// Test SearchPayments
        /// </summary>
        [Fact]
        public void SearchPaymentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string reference = null;
            //string email = null;
            //string state = null;
            //string cardBrand = null;
            //string fromDate = null;
            //string toDate = null;
            //string page = null;
            //string displaySize = null;
            //string cardholderName = null;
            //string firstDigitsCardNumber = null;
            //string lastDigitsCardNumber = null;
            //string fromSettledDate = null;
            //string toSettledDate = null;
            //var response = instance.SearchPayments(reference, email, state, cardBrand, fromDate, toDate, page, displaySize, cardholderName, firstDigitsCardNumber, lastDigitsCardNumber, fromSettledDate, toSettledDate);
            //Assert.IsType<PaymentSearchResults>(response);
        }
    }
}
